[{"F:\\E-commerce\\client\\src\\index.js":"1","F:\\E-commerce\\client\\src\\App.js":"2","F:\\E-commerce\\client\\src\\store.js":"3","F:\\E-commerce\\client\\src\\Screens\\Checkout.js":"4","F:\\E-commerce\\client\\src\\Components\\Header.js":"5","F:\\E-commerce\\client\\src\\Components\\Footer.js":"6","F:\\E-commerce\\client\\src\\Screens\\Register.js":"7","F:\\E-commerce\\client\\src\\Screens\\OrderSummary.js":"8","F:\\E-commerce\\client\\src\\Screens\\Payment.js":"9","F:\\E-commerce\\client\\src\\Screens\\UserEdit.js":"10","F:\\E-commerce\\client\\src\\Screens\\Home.js":"11","F:\\E-commerce\\client\\src\\Screens\\Cart.js":"12","F:\\E-commerce\\client\\src\\reducers\\userReducers.js":"13","F:\\E-commerce\\client\\src\\reducers\\cartReducers.js":"14","F:\\E-commerce\\client\\src\\Screens\\Feedback.js":"15","F:\\E-commerce\\client\\src\\Screens\\Login.js":"16","F:\\E-commerce\\client\\src\\Screens\\Dashboard.js":"17","F:\\E-commerce\\client\\src\\Screens\\Menu.js":"18","F:\\E-commerce\\client\\src\\Screens\\EateryEdit.js":"19","F:\\E-commerce\\client\\src\\Screens\\DashboardMenu.js":"20","F:\\E-commerce\\client\\src\\Screens\\UserList.js":"21","F:\\E-commerce\\client\\src\\Screens\\EateryList.js":"22","F:\\E-commerce\\client\\src\\reducers\\eateryReducers.js":"23","F:\\E-commerce\\client\\src\\Components\\FormContainer.js":"24","F:\\E-commerce\\client\\src\\Components\\Message.js":"25","F:\\E-commerce\\client\\src\\Components\\Eatery.js":"26","F:\\E-commerce\\client\\src\\Components\\Loader.js":"27","F:\\E-commerce\\client\\src\\Components\\Category.js":"28","F:\\E-commerce\\client\\src\\actions\\cartActions.js":"29","F:\\E-commerce\\client\\src\\constants\\cartConstants.js":"30","F:\\E-commerce\\client\\src\\constants\\userConstants.js":"31","F:\\E-commerce\\client\\src\\Components\\CheckoutSteps.js":"32","F:\\E-commerce\\client\\src\\actions\\eateryActions.js":"33","F:\\E-commerce\\client\\src\\actions\\userActions.js":"34","F:\\E-commerce\\client\\src\\Components\\Review.js":"35","F:\\E-commerce\\client\\src\\constants\\eateryConstants.js":"36","F:\\E-commerce\\client\\src\\Components\\Item.js":"37","F:\\E-commerce\\client\\src\\reducers\\orderReducer.js":"38","F:\\E-commerce\\client\\src\\constants\\orderConstants.js":"39","F:\\E-commerce\\client\\src\\actions\\orderActions.js":"40","F:\\E-commerce\\client\\src\\Screens\\MyOrderList.js":"41"},{"size":327,"mtime":1614445136741,"results":"42","hashOfConfig":"43"},{"size":2308,"mtime":1614607815581,"results":"44","hashOfConfig":"43"},{"size":2726,"mtime":1614973408434,"results":"45","hashOfConfig":"43"},{"size":4049,"mtime":1614968011410,"results":"46","hashOfConfig":"43"},{"size":3727,"mtime":1613769214970,"results":"47","hashOfConfig":"43"},{"size":1795,"mtime":1613566278183,"results":"48","hashOfConfig":"43"},{"size":4304,"mtime":1612775988073,"results":"49","hashOfConfig":"43"},{"size":10706,"mtime":1614977861956,"results":"50","hashOfConfig":"43"},{"size":6606,"mtime":1614975501872,"results":"51","hashOfConfig":"43"},{"size":5723,"mtime":1613566259304,"results":"52","hashOfConfig":"43"},{"size":5095,"mtime":1614760545066,"results":"53","hashOfConfig":"43"},{"size":5382,"mtime":1612431306044,"results":"54","hashOfConfig":"43"},{"size":3785,"mtime":1613560290438,"results":"55","hashOfConfig":"43"},{"size":2573,"mtime":1614978120168,"results":"56","hashOfConfig":"43"},{"size":1985,"mtime":1613976170705,"results":"57","hashOfConfig":"43"},{"size":2422,"mtime":1614445136565,"results":"58","hashOfConfig":"43"},{"size":14939,"mtime":1614977340934,"results":"59","hashOfConfig":"43"},{"size":8170,"mtime":1614445136621,"results":"60","hashOfConfig":"43"},{"size":12915,"mtime":1614445332265,"results":"61","hashOfConfig":"43"},{"size":7524,"mtime":1614445136533,"results":"62","hashOfConfig":"43"},{"size":3370,"mtime":1614445136701,"results":"63","hashOfConfig":"43"},{"size":4815,"mtime":1614445136533,"results":"64","hashOfConfig":"43"},{"size":3644,"mtime":1614445136781,"results":"65","hashOfConfig":"43"},{"size":346,"mtime":1612766841348,"results":"66","hashOfConfig":"43"},{"size":304,"mtime":1613380062534,"results":"67","hashOfConfig":"43"},{"size":1272,"mtime":1614954073796,"results":"68","hashOfConfig":"43"},{"size":479,"mtime":1612002324299,"results":"69","hashOfConfig":"43"},{"size":1725,"mtime":1613328696856,"results":"70","hashOfConfig":"43"},{"size":1414,"mtime":1614965092572,"results":"71","hashOfConfig":"43"},{"size":202,"mtime":1614977681544,"results":"72","hashOfConfig":"43"},{"size":1515,"mtime":1613551580999,"results":"73","hashOfConfig":"43"},{"size":1294,"mtime":1614352929299,"results":"74","hashOfConfig":"43"},{"size":6244,"mtime":1614445136701,"results":"75","hashOfConfig":"43"},{"size":7893,"mtime":1614445136741,"results":"76","hashOfConfig":"43"},{"size":2026,"mtime":1613976170700,"results":"77","hashOfConfig":"43"},{"size":1508,"mtime":1614445136741,"results":"78","hashOfConfig":"43"},{"size":3651,"mtime":1614976160374,"results":"79","hashOfConfig":"43"},{"size":4198,"mtime":1614973368797,"results":"80","hashOfConfig":"43"},{"size":1790,"mtime":1614972622475,"results":"81","hashOfConfig":"43"},{"size":6413,"mtime":1614974521199,"results":"82","hashOfConfig":"43"},{"size":3192,"mtime":1614978630119,"results":"83","hashOfConfig":"43"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},"1y75gs6",{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"86"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"86"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"86"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"86"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"86"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"156","usedDeprecatedRules":"86"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"86"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"171","usedDeprecatedRules":"86"},{"filePath":"172","messages":"173","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\E-commerce\\client\\src\\index.js",[],["174","175"],"F:\\E-commerce\\client\\src\\App.js",["176"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport Home from './Screens/Home';\r\nimport Menu from './Screens/Menu';\r\nimport Cart from './Screens/Cart';\r\nimport Login from './Screens/Login';\r\nimport Register from './Screens/Register'\r\nimport Checkout from './Screens/Checkout';\r\nimport Payment from './Screens/Payment';\r\nimport Dashboard from './Screens/Dashboard';\r\nimport Feedback from './Screens/Feedback';\r\nimport DashboardMenu from './Screens/DashboardMenu';\r\nimport UserList from './Screens/UserList';\r\nimport UserEdit from './Screens/UserEdit';\r\nimport EateryList from './Screens/EateryList';\r\nimport EateryEdit from './Screens/EateryEdit';\r\nimport OrderSummary from './Screens/OrderSummary';\r\nimport MyOrderList from './Screens/MyOrderList';\r\nfunction App() {\r\n\r\n    return (\r\n      <Router>\r\n\r\n        <Header />\r\n\r\n        <main>\r\n\r\n          <Route path='/' component={Home} exact />\r\n\r\n          <Container>\r\n            <Route path = '/login' component={Login} />\r\n            <Route path = '/register' component={Register} />\r\n            <Route path = '/dashboard' component={Dashboard} />\r\n            <Route path = '/dashboardMenu' component={DashboardMenu} />\r\n            <Route path = '/menu/:id' component={Menu} exact />\r\n            <Route path = '/cart' component={Cart} />\r\n            <Route path = '/checkout' component={Checkout} />\r\n            <Route path = '/payment' component={Payment} />\r\n            <Route path = '/orderSummary/:id' component={OrderSummary} />\r\n            <Route path = '/myorders' component={MyOrderList} />\r\n            <Route path = '/feedback' component={Feedback} />\r\n            <Route path = '/admin/userlist' component={UserList} />\r\n            <Route path = '/admin/user/:id/edit' component={UserEdit} />\r\n            <Route path = '/admin/eatery/:id/edit' component={EateryEdit} />\r\n            <Route path = '/admin/eaterylist' component={EateryList} />\r\n          </Container>\r\n        </main>\r\n\r\n        <Footer />\r\n\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","F:\\E-commerce\\client\\src\\store.js",[],"F:\\E-commerce\\client\\src\\Screens\\Checkout.js",[],"F:\\E-commerce\\client\\src\\Components\\Header.js",[],"F:\\E-commerce\\client\\src\\Components\\Footer.js",[],"F:\\E-commerce\\client\\src\\Screens\\Register.js",[],"F:\\E-commerce\\client\\src\\Screens\\OrderSummary.js",["177","178","179","180"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport io from 'socket.io-client'\r\nimport { Link } from 'react-router-dom'\r\nimport { Row, Col, ListGroup, Image, Card, Button,Tab } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport {\r\n  getOrderDetails,\r\n  paymentDone\r\n} from '../actions/orderActions'\r\nimport {\r\n  listEateryDetails,\r\n} from '../actions/eateryActions'\r\nimport { ORDER_PAYMENT_DONE_RESET } from '../constants/orderConstants'\r\nimport { CART_RESET } from '../constants/cartConstants'\r\n\r\n\r\n\r\nlet socket\r\nconst OrderSummary = ({ match}) => {\r\n  const orderId = match.params.id\r\n\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetails = useSelector((state) => state.orderDetails)\r\n  const { order, loading, error } = orderDetails\r\n\r\n  const eateryDetails = useSelector((state) => state.eateryDetails)\r\n  const {loading:eateryLoading, error: eateryError, eatery} = eateryDetails\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('null')\r\n\r\n  const orderCustomerPaid = useSelector((state) => state.orderCustomerPaid)\r\n  const { loading: loadingPay, success: successPay, error: errorPay } = orderCustomerPaid\r\n\r\n\r\n  if (!loading) {\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.cost * item.qty, 0)\r\n    )\r\n  }\r\n  const ENDPOINT ='localhost:5000'\r\n  useEffect(() => {\r\n    socket =io.connect(ENDPOINT, {reconnect: true})\r\n    \r\n    if (!order  || order._id !== orderId) {\r\n \r\n      dispatch(getOrderDetails(orderId))\r\n      \r\n    }  \r\n    else if(!eatery){\r\n      dispatch(listEateryDetails(order.eatery))\r\n    } \r\n    //console.log(socket)\r\n    console.log(successPay)\r\n    if(successPay){\r\n      const eateryIdforSocket=order.eatery\r\n      dispatch(getOrderDetails(orderId))\r\n      socket.emit('customerPaid',{eateryIdforSocket})\r\n      dispatch({ type: ORDER_PAYMENT_DONE_RESET }) \r\n    }\r\n\r\n\r\n    \r\n\r\n    socket.on('paidOrder', ({orderPaidId})=>{\r\n      // console.log(orderPaidId)\r\n      if(orderPaidId===orderId){\r\n        // console.log('Paid for your Order')\r\n        dispatch(getOrderDetails(orderId))\r\n      }\r\n    }) \r\n    socket.on('cancelledOrder', ({orderCancelledId})=>{\r\n      // console.log(orderCancelledId)\r\n      if(orderCancelledId===orderId){\r\n        // console.log('Cancelled for your Order')\r\n        dispatch(getOrderDetails(orderId))\r\n      }\r\n    })\r\n    socket.on('completedOrder', ({orderCompletedId})=>{\r\n      // console.log(orderCompletedId)\r\n      if(orderCompletedId===orderId){\r\n        // console.log('Completed for your Order')\r\n        dispatch(getOrderDetails(orderId))\r\n        dispatch({type: CART_RESET})\r\n      }\r\n    })\r\n\r\n    return () => {\r\n      //socket.emit('disconnect')\r\n      socket.off()\r\n    }\r\n    \r\n  }, [dispatch, orderId, order, ENDPOINT,eatery,successPay])\r\n\r\n\r\n  const paymentHandler = () =>{\r\n    dispatch(paymentDone({\r\n        _id: orderId,\r\n        paymentMethod: paymentMethod\r\n    }\r\n    ))\r\n  }\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h2>Order Summary {order._id}</h2>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h3>Details</h3>\r\n              <Row>\r\n                <Col>\r\n                    <p>\r\n                        <strong>Name: </strong> {order.customerMeta.name}\r\n                    </p>  \r\n                </Col>\r\n                <Col>\r\n                    <p>\r\n                        <strong>Phone: </strong> {order.customerMeta.phone}\r\n                    </p> \r\n                </Col>\r\n                <Col>\r\n                    <p>\r\n                        <strong>Email: </strong> <a href={`mailto:${order.customerMeta.email}`}>{order.customerMeta.email}</a>\r\n                    </p> \r\n                </Col>\r\n              </Row>\r\n              <Row>\r\n                  <Col>\r\n                    <p>\r\n                        <strong>Eatery: </strong> <Link to={`/menu/${order.eatery}`}>\r\n                            {eatery.name}</Link>\r\n                    </p>\r\n                  </Col>\r\n              </Row>\r\n            \r\n              \r\n              {order.completed ? (\r\n                <Message variant='success'>\r\n                  Completed on {order.completedAt.substring(0,10)}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='primary'>In Progress</Message>\r\n              )}\r\n              {order.cancelled ? (\r\n                <Message variant='danger'>Order Cancelled</Message>\r\n              ) : (\r\n                null\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h3>Payment Method</h3>\r\n              <Row>\r\n                <Col>\r\n                    <p>\r\n                        <strong>Type: </strong>\r\n                        {order.paymentType}\r\n                    </p>  \r\n                </Col>\r\n                {order.paymentMethod!=='null'?(\r\n                  <Col>\r\n                      <p>\r\n                          <strong>Mode: </strong>\r\n                          {order.paymentMethod}\r\n                      </p>  \r\n                  </Col>\r\n                ):null}\r\n              </Row>\r\n              \r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt.substring(0,10)}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not Paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h3>Order Items</h3>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        \r\n                        <Col>\r\n                            {item.name}\r\n                        </Col>\r\n                        <Col>\r\n                            {item.category}\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x ₹{item.cost} = ₹{item.qty * item.cost}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h3>Order Summary</h3>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>₹{order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Tax</Col>\r\n                  <Col>₹{order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>₹{order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              \r\n              {(order.paymentType==='payLater' && order.paymentMethod==='null')?(\r\n                <>\r\n                  <ListGroup.Item>\r\n                    <Tab.Container id=\"list-group-tabs-example\">\r\n                        <Row>\r\n                            <Col sm={6}>\r\n                            <ListGroup>\r\n                                <ListGroup.Item action href=\"#link1\" onClick={(e)=>setPaymentMethod('UPI')}>\r\n                                UPI\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item action href=\"#link2\" onClick={(e)=>setPaymentMethod('PayTM')}>\r\n                                PayTM\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                            </Col>\r\n                            <Col sm={6}>\r\n                            <Tab.Content>\r\n                                <Tab.Pane eventKey=\"#link1\">\r\n                                <h6>{eatery.upi}</h6>\r\n                                </Tab.Pane>\r\n                                <Tab.Pane eventKey=\"#link2\">\r\n                                <h6>{eatery.paytm}</h6>\r\n                                </Tab.Pane>\r\n                            </Tab.Content>\r\n                          </Col>\r\n                        </Row>\r\n                      </Tab.Container>\r\n                  </ListGroup.Item>\r\n                  \r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={()=>paymentHandler(order)}\r\n                      disabled={paymentMethod==='null' || order.cancelled}\r\n                    >\r\n                      Payment Done\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {errorPay && <Message variant='danger'>{errorPay}</Message>}\r\n                </>\r\n\r\n                \r\n              ):(null)}\r\n              {/* {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )} */}\r\n              {/* {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}\r\n                    >\r\n                      Mark As Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )} */}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default OrderSummary\r\n","F:\\E-commerce\\client\\src\\Screens\\Payment.js",["181"],"F:\\E-commerce\\client\\src\\Screens\\UserEdit.js",[],"F:\\E-commerce\\client\\src\\Screens\\Home.js",[],"F:\\E-commerce\\client\\src\\Screens\\Cart.js",["182"],"import React, { useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Button, Card, Container} from 'react-bootstrap'\r\nimport Message from '../Components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst Cart = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const dispatch = useDispatch()\r\n    const {cartItems,eateryDetails}=cart\r\n    let browserHistory = useHistory();\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id,eateryDetails))\r\n    }\r\n    const addToCartHandler = (item,qty) =>{\r\n        \r\n        const item1={\r\n            _id: item.product,\r\n            name: item.name,\r\n            cost: item.cost,\r\n            category: item.category,\r\n            image: item.image,\r\n            isAvailable: item.isAvailable,\r\n        }\r\n        dispatch(addToCart(item1,eateryDetails,qty))\r\n    }\r\n    const checkoutHandler =() =>{\r\n        history.push('/checkout')\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Container fluid>\r\n                <Row><Button className='mt-3' onClick={()=>browserHistory.goBack()}>Go Back</Button></Row>\r\n                <Row><h3>Your Cart<small class=\"text-muted\"> from {eateryDetails.name}</small></h3></Row>\r\n                {(cartItems.length === 0 || !eateryDetails) ? (\r\n                    <Message>\r\n                        Your cart is empty  <Button><Link to='/'>Order!</Link></Button>\r\n                    </Message>\r\n                ):(\r\n                    <div>\r\n                    <Row md={1} lg={1} xl={1} noGutters={true}>   \r\n                        \r\n                        <ListGroup>\r\n                            \r\n                            {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                \r\n                                <Col md={4} xs={3} mx-auto align='center'>\r\n                                    {item.name}\r\n                                </Col>\r\n                                \r\n                                <Col md={4} xs={5} mx-auto align='center'>\r\n                                <Button size='sm' className='mx-2' onClick={()=> {\r\n                                        addToCartHandler(item,item.qty-1)\r\n                                        }} disabled={item.qty===0}>\r\n                                            <i class=\"fas fa-chevron-left\"></i>\r\n                                    </Button>\r\n                                    \r\n                                    {item.qty}\r\n                                \r\n                                    <Button size='sm' className='mx-2' onClick={()=> {\r\n                                        addToCartHandler(item,item.qty+1)\r\n                                        }}>\r\n                                            <i class=\"fas fa-chevron-right\"></i>\r\n                                    </Button>\r\n                                </Col >\r\n                                <Col xs={2} md={1}  align='center'>₹{item.cost*item.qty}</Col>\r\n                                <Col md={2} xs={1} align='center'>\r\n                                    <Button\r\n                                    size='sm' mx-0\r\n                                    onClick={() => removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                                \r\n                                \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </Row>\r\n\r\n                    <Row className='my-4'>\r\n\r\n                        <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item >\r\n                            <h4>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                                items\r\n                            </h4>\r\n                            ₹\r\n                            {cartItems\r\n                                .reduce((acc, item) => acc + item.qty * item.cost, 0)\r\n                                .toFixed(2)}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0 || !eateryDetails}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    Proceed To Checkout\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        </Card>\r\n                        \r\n                    </Row>\r\n                </div>\r\n                )}\r\n                \r\n            </Container>\r\n        </React.Fragment>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n","F:\\E-commerce\\client\\src\\reducers\\userReducers.js",[],"F:\\E-commerce\\client\\src\\reducers\\cartReducers.js",[],"F:\\E-commerce\\client\\src\\Screens\\Feedback.js",["183"],"import React, { useEffect} from 'react';\r\nimport randomColor from 'randomcolor';\r\n// import { Row, Col, Container, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Review from '../Components/Review';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport { getEateryReviews } from '../actions/eateryActions'\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport {Button, Container} from 'react-bootstrap'\r\n\r\n\r\nconst Feedback = ({history}) =>{\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n    const reviewList = useSelector(state => state.eateryReviews);\r\n    const {error, loading, reviews} = reviewList;\r\n    \r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        else{\r\n            if(userInfo.eatery){\r\n                dispatch(getEateryReviews(userInfo.eatery));\r\n            }\r\n        }\r\n    }, [dispatch, history, userInfo]);\r\n    \r\n    return(\r\n        <div>\r\n                <LinkContainer to='/dashboard' className='my-3'>\r\n                    <Button variant='secondary'>Back</Button>\r\n                </LinkContainer>\r\n                <h2>Feedback and Complaints</h2>\r\n            { loading? ( <Loader /> ) : error?  (<Message variant='danger'>{ error }</Message>) :\r\n            (\r\n                reviews.map((review) => {\r\n                    return(\r\n                        <Review \r\n                            name={review.name}\r\n                            email={review.email}\r\n                            comment={review.comment}\r\n                            rating={review.rating}\r\n                            color={randomColor()}\r\n                        />\r\n                    )\r\n                })\r\n            )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","F:\\E-commerce\\client\\src\\Screens\\Login.js",[],"F:\\E-commerce\\client\\src\\Screens\\Dashboard.js",["184","185","186"],"F:\\E-commerce\\client\\src\\Screens\\Menu.js",[],"F:\\E-commerce\\client\\src\\Screens\\EateryEdit.js",[],"F:\\E-commerce\\client\\src\\Screens\\DashboardMenu.js",[],"F:\\E-commerce\\client\\src\\Screens\\UserList.js",[],"F:\\E-commerce\\client\\src\\Screens\\EateryList.js",[],"F:\\E-commerce\\client\\src\\reducers\\eateryReducers.js",[],"F:\\E-commerce\\client\\src\\Components\\FormContainer.js",[],"F:\\E-commerce\\client\\src\\Components\\Message.js",[],"F:\\E-commerce\\client\\src\\Components\\Eatery.js",[],"F:\\E-commerce\\client\\src\\Components\\Loader.js",[],"F:\\E-commerce\\client\\src\\Components\\Category.js",["187","188","189","190","191","192","193","194","195","196"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport Item from '../Components/Item';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst Category = ({name, menu}) => {\r\n    const  eateryDetails = useSelector(state => state.eateryDetails) // call whatever you call in the store\r\n    const {eatery} = eateryDetails\r\n    const [openCategory, setOpenCategory] = React.useState(true);\r\n\r\n    const handleClick = () => {\r\n        setOpenCategory(!openCategory);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <ListItem button onClick={handleClick}>\r\n                            \r\n                <ListItemText primary= {name} />\r\n                    {openCategory ? <i class=\"fas fa-chevron-up\"></i> : <i class=\"fas fa-chevron-down\"></i>}\r\n            </ListItem>\r\n            <Collapse in={openCategory} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    {menu.map(item => (\r\n                        <Row key={item._id}>\r\n                            <Item item={item} eateryDetailProp={eatery}/>\r\n                        </Row>\r\n                    ))}\r\n                                                \r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","F:\\E-commerce\\client\\src\\actions\\cartActions.js",[],"F:\\E-commerce\\client\\src\\constants\\cartConstants.js",[],"F:\\E-commerce\\client\\src\\constants\\userConstants.js",[],"F:\\E-commerce\\client\\src\\Components\\CheckoutSteps.js",[],"F:\\E-commerce\\client\\src\\actions\\eateryActions.js",["197"],"import  {\r\n    EATERY_LIST_REQUEST,\r\n    EATERY_LIST_SUCCESS,\r\n    EATERY_LIST_FAIL,\r\n    EATERY_DETAILS_REQUEST,\r\n    EATERY_DETAILS_SUCCESS,\r\n    EATERY_DETAILS_FAIL,\r\n    EATERY_DELETE_SUCCESS,\r\n    EATERY_DELETE_REQUEST,\r\n    EATERY_DELETE_FAIL,\r\n    EATERY_CREATE_REQUEST,\r\n    EATERY_CREATE_SUCCESS,\r\n    EATERY_CREATE_FAIL,\r\n    EATERY_UPDATE_REQUEST,\r\n    EATERY_UPDATE_SUCCESS,\r\n    EATERY_UPDATE_FAIL,\r\n    EATERY_REVIEWS_FAIL,\r\n    EATERY_REVIEWS_REQUEST,\r\n    EATERY_REVIEWS_SUCCESS,\r\n    EATERY_CREATE_REVIEW_FAIL,\r\n    EATERY_CREATE_REVIEW_REQUEST,\r\n    EATERY_CREATE_REVIEW_SUCCESS\r\n} from '../constants/eateryConstants'\r\nimport axios from 'axios'\r\nimport { logout } from './userActions'\r\n\r\nexport const listEateries = () => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: EATERY_LIST_REQUEST})\r\n\r\n        const {data} = await axios.get('/api/eateries')\r\n\r\n        dispatch({\r\n            type: EATERY_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: EATERY_LIST_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listEateryDetails = (id) => async(dispatch) => {\r\n    try {\r\n        dispatch({ type: EATERY_DETAILS_REQUEST})\r\n\r\n        const {data} = await axios.get(`/api/eateries/${id}`)\r\n\r\n        dispatch({\r\n            type: EATERY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    }\r\n    catch(error){\r\n        dispatch({\r\n            type: EATERY_DETAILS_FAIL, \r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const createEateryReview = (id, review) => async (dispatch, getState) => {\r\n  try {\r\n      dispatch({\r\n          type: EATERY_CREATE_REVIEW_REQUEST,\r\n      })\r\n\r\n      const {\r\n          userLogin: { userInfo },\r\n      } = getState()\r\n\r\n      const config = {\r\n          headers: {\r\n              //Authorization: `Bearer ${userInfo.token}`,\r\n          },\r\n      }\r\n\r\n      await axios.post(`/api/eateries/${id}/reviews`, review, config)\r\n      \r\n      dispatch({\r\n          type: EATERY_CREATE_REVIEW_SUCCESS,\r\n      })\r\n  } catch (error) {\r\n      const message =\r\n      error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      \r\n      dispatch({\r\n          type: EATERY_CREATE_REVIEW_FAIL,\r\n          payload: message,\r\n      })\r\n  }\r\n}\r\n\r\nexport const getEateryReviews = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: EATERY_REVIEWS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/eateries/${id}/reviews`, config)\r\n        \r\n        console.log(data)\r\n        dispatch({\r\n            type: EATERY_REVIEWS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        \r\n        dispatch({\r\n            type: EATERY_REVIEWS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteEatery = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: EATERY_DELETE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      await axios.delete(`/api/eateries/${id}`, config)\r\n  \r\n      dispatch({\r\n        type: EATERY_DELETE_SUCCESS,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: EATERY_DELETE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const createEatery = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: EATERY_CREATE_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.post(`/api/eateries`, {}, config)\r\n  \r\n      dispatch({\r\n        type: EATERY_CREATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: EATERY_CREATE_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n  \r\nexport const updateEatery = (eatery) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: EATERY_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/eateries/${eatery._id}`,eatery,config)\r\n\r\n        dispatch({\r\n            type: EATERY_UPDATE_SUCCESS,\r\n            payload: data,\r\n        })\r\n        dispatch({ type: EATERY_DETAILS_SUCCESS, payload: data })\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: EATERY_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","F:\\E-commerce\\client\\src\\actions\\userActions.js",[],"F:\\E-commerce\\client\\src\\Components\\Review.js",[],"F:\\E-commerce\\client\\src\\constants\\eateryConstants.js",[],"F:\\E-commerce\\client\\src\\Components\\Item.js",["198","199","200","201","202","203","204"],"F:\\E-commerce\\client\\src\\reducers\\orderReducer.js",[],"F:\\E-commerce\\client\\src\\constants\\orderConstants.js",[],"F:\\E-commerce\\client\\src\\actions\\orderActions.js",["205"],"import axios from 'axios'\r\nimport { \r\n  ORDER_CANCEL_FAIL,\r\n  ORDER_CANCEL_REQUEST,\r\n  ORDER_CANCEL_SUCCESS,\r\n  ORDER_COMPLETED_FAIL,\r\n  ORDER_COMPLETED_REQUEST,\r\n  ORDER_COMPLETED_SUCCESS,\r\n  ORDER_CREATE_FAIL, \r\n  ORDER_CREATE_REQUEST, \r\n  ORDER_CREATE_SUCCESS, \r\n  ORDER_DETAILS_FAIL, \r\n  ORDER_DETAILS_REQUEST, \r\n  ORDER_DETAILS_SUCCESS, \r\n  ORDER_LIST_MY_FAIL, \r\n  ORDER_LIST_MY_REQUEST, \r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_PAYMENT_DONE_FAIL,\r\n  ORDER_PAYMENT_DONE_REQUEST,\r\n  ORDER_PAYMENT_DONE_SUCCESS,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_PAY_SUCCESS\r\n} from '../constants/orderConstants'\r\nimport { logout } from './userActions'\r\nexport const createOrder = (order) => async (dispatch) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_CREATE_REQUEST,\r\n      })\r\n  \r\n      const { data } = await axios.post(`/api/orders`, order)\r\n  \r\n      dispatch({\r\n        type: ORDER_CREATE_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n        \r\n      dispatch({\r\n        type: ORDER_CREATE_FAIL,\r\n        payload:\r\n            error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n      })\r\n    }\r\n  }\r\n\r\n  export const getOrderDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_DETAILS_REQUEST,\r\n      })\r\n  \r\n      const { data } = await axios.get(`/api/orders/${id}`)\r\n  \r\n      dispatch({\r\n        type: ORDER_DETAILS_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n     \r\n      \r\n      dispatch({\r\n        type: ORDER_DETAILS_FAIL,\r\n        payload:\r\n        error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message,\r\n      })\r\n    }\r\n  }\r\n  \r\n  export const listMyOrders = () => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_LIST_MY_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n      \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.get(`/api/orders/myorders`, config)\r\n  \r\n      dispatch({\r\n        type: ORDER_LIST_MY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_LIST_MY_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\n  export const payOrder = (order) => async (dispatch, getState) => {\r\n    try {\r\n      dispatch({\r\n        type: ORDER_PAY_REQUEST,\r\n      })\r\n  \r\n      const {\r\n        userLogin: { userInfo },\r\n      } = getState()\r\n  \r\n      const config = {\r\n        headers: {\r\n          Authorization: `Bearer ${userInfo.token}`,\r\n        },\r\n      }\r\n  \r\n      const { data } = await axios.put(\r\n        `/api/orders/${order._id}/pay`,\r\n        {},\r\n        config\r\n      )\r\n  \r\n      dispatch({\r\n        type: ORDER_PAY_SUCCESS,\r\n        payload: data,\r\n      })\r\n    } catch (error) {\r\n      const message =\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message\r\n      if (message === 'Not authorized, token failed') {\r\n        dispatch(logout())\r\n      }\r\n      dispatch({\r\n        type: ORDER_PAY_FAIL,\r\n        payload: message,\r\n      })\r\n    }\r\n  }\r\n\r\nexport const completeOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_COMPLETED_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/complete`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_COMPLETED_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_COMPLETED_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const cancelOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CANCEL_REQUEST,\r\n    })\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/cancel`,\r\n      {},\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: ORDER_CANCEL_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout())\r\n    }\r\n    dispatch({\r\n      type: ORDER_CANCEL_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const paymentDone = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PAYMENT_DONE_REQUEST,\r\n    })\r\n\r\n    const { data } = await axios.put(`/api/orders/${order._id}/customerPayment`, order)\r\n\r\n    dispatch({\r\n      type: ORDER_PAYMENT_DONE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    \r\n    dispatch({\r\n      type: ORDER_PAYMENT_DONE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\n\r\n// export const listOrders = () => async(dispatch) => {\r\n//   try {\r\n//       dispatch({ type: ORDER_LIST_REQUEST})\r\n\r\n//       const {data} = await axios.get('/api/orders')\r\n\r\n//       dispatch({\r\n//           type: EATERY_LIST_SUCCESS,\r\n//           payload: data\r\n//       })\r\n\r\n//   }\r\n//   catch(error){\r\n//       dispatch({\r\n//           type: EATERY_LIST_FAIL, \r\n//           payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n//       })\r\n//   }\r\n// }","F:\\E-commerce\\client\\src\\Screens\\MyOrderList.js",["206","207"],{"ruleId":"208","replacedBy":"209"},{"ruleId":"210","replacedBy":"211"},{"ruleId":"212","severity":1,"message":"213","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":16},{"ruleId":"212","severity":1,"message":"216","line":2,"column":8,"nodeType":"214","messageId":"215","endLine":2,"endColumn":13},{"ruleId":"212","severity":1,"message":"217","line":5,"column":31,"nodeType":"214","messageId":"215","endLine":5,"endColumn":36},{"ruleId":"212","severity":1,"message":"218","line":32,"column":18,"nodeType":"214","messageId":"215","endLine":32,"endColumn":31},{"ruleId":"212","severity":1,"message":"219","line":32,"column":40,"nodeType":"214","messageId":"215","endLine":32,"endColumn":51},{"ruleId":"220","severity":1,"message":"221","line":47,"column":8,"nodeType":"222","endLine":47,"endColumn":65,"suggestions":"223"},{"ruleId":"212","severity":1,"message":"224","line":1,"column":17,"nodeType":"214","messageId":"215","endLine":1,"endColumn":26},{"ruleId":"212","severity":1,"message":"225","line":10,"column":17,"nodeType":"214","messageId":"215","endLine":10,"endColumn":26},{"ruleId":"212","severity":1,"message":"226","line":53,"column":95,"nodeType":"214","messageId":"215","endLine":53,"endColumn":108},{"ruleId":"212","severity":1,"message":"227","line":56,"column":91,"nodeType":"214","messageId":"215","endLine":56,"endColumn":102},{"ruleId":"220","severity":1,"message":"228","line":105,"column":8,"nodeType":"222","endLine":105,"endColumn":106,"suggestions":"229"},{"ruleId":"212","severity":1,"message":"230","line":1,"column":16,"nodeType":"214","messageId":"215","endLine":1,"endColumn":24},{"ruleId":"212","severity":1,"message":"224","line":1,"column":26,"nodeType":"214","messageId":"215","endLine":1,"endColumn":35},{"ruleId":"212","severity":1,"message":"231","line":3,"column":15,"nodeType":"214","messageId":"215","endLine":3,"endColumn":18},{"ruleId":"212","severity":1,"message":"217","line":3,"column":20,"nodeType":"214","messageId":"215","endLine":3,"endColumn":25},{"ruleId":"212","severity":1,"message":"232","line":3,"column":27,"nodeType":"214","messageId":"215","endLine":3,"endColumn":36},{"ruleId":"212","severity":1,"message":"233","line":3,"column":38,"nodeType":"214","messageId":"215","endLine":3,"endColumn":42},{"ruleId":"212","severity":1,"message":"234","line":3,"column":44,"nodeType":"214","messageId":"215","endLine":3,"endColumn":50},{"ruleId":"212","severity":1,"message":"235","line":6,"column":10,"nodeType":"214","messageId":"215","endLine":6,"endColumn":20},{"ruleId":"212","severity":1,"message":"236","line":7,"column":8,"nodeType":"214","messageId":"215","endLine":7,"endColumn":21},{"ruleId":"212","severity":1,"message":"237","line":10,"column":8,"nodeType":"214","messageId":"215","endLine":10,"endColumn":20},{"ruleId":"212","severity":1,"message":"238","line":74,"column":24,"nodeType":"214","messageId":"215","endLine":74,"endColumn":32},{"ruleId":"212","severity":1,"message":"239","line":1,"column":10,"nodeType":"214","messageId":"215","endLine":1,"endColumn":17},{"ruleId":"212","severity":1,"message":"224","line":3,"column":26,"nodeType":"214","messageId":"215","endLine":3,"endColumn":35},{"ruleId":"212","severity":1,"message":"233","line":5,"column":10,"nodeType":"214","messageId":"215","endLine":5,"endColumn":14},{"ruleId":"212","severity":1,"message":"231","line":5,"column":16,"nodeType":"214","messageId":"215","endLine":5,"endColumn":19},{"ruleId":"212","severity":1,"message":"232","line":5,"column":26,"nodeType":"214","messageId":"215","endLine":5,"endColumn":35},{"ruleId":"212","severity":1,"message":"217","line":5,"column":45,"nodeType":"214","messageId":"215","endLine":5,"endColumn":50},{"ruleId":"240","severity":1,"message":"241","line":50,"column":25,"nodeType":"242","messageId":"243","endLine":50,"endColumn":27},{"ruleId":"212","severity":1,"message":"244","line":18,"column":3,"nodeType":"214","messageId":"215","endLine":18,"endColumn":21},{"ruleId":"212","severity":1,"message":"245","line":3,"column":10,"nodeType":"214","messageId":"215","endLine":3,"endColumn":14},{"ruleId":"220","severity":1,"message":"246","line":28,"column":8,"nodeType":"222","endLine":28,"endColumn":10,"suggestions":"247"},"no-native-reassign",["248"],"no-negated-in-lhs",["249"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'axios' is defined but never used.","'Image' is defined but never used.","'eateryLoading' is assigned a value but never used.","'eateryError' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'order._id'. Either include them or remove the dependency array.","ArrayExpression",["250"],"'useEffect' is defined but never used.","'Container' is defined but never used.","'errorComplete' is assigned a value but never used.","'errorCancel' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'orderCancelled._id', 'orderCompleted._id', and 'orderPaid._id'. Either include them or remove the dependency array.",["251"],"'useState' is defined but never used.","'Col' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'ListSubheader' is defined but never used.","'ListItemIcon' is defined but never used.","'userInfo' is assigned a value but never used.","'disable' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ORDER_LIST_REQUEST' is defined but never used.","'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', and 'userInfo'. Either include them or remove the dependency array.",["252"],"no-global-assign","no-unsafe-negation",{"desc":"253","fix":"254"},{"desc":"255","fix":"256"},{"desc":"257","fix":"258"},"Update the dependencies array to be: [history, customerMeta, success, eateryDetails, ENDPOINT, order._id, dispatch]",{"range":"259","text":"260"},"Update the dependencies array to be: [dispatch, history, userInfo, user, success, ENDPOINT, successPay, successComplete, successCancel, orderPaid._id, orderCancelled._id, orderCompleted._id]",{"range":"261","text":"262"},"Update the dependencies array to be: [dispatch, history, userInfo]",{"range":"263","text":"264"},[1612,1669],"[history, customerMeta, success, eateryDetails, ENDPOINT, order._id, dispatch]",[4125,4223],"[dispatch, history, userInfo, user, success, ENDPOINT, successPay, successComplete, successCancel, orderPaid._id, orderCancelled._id, orderCompleted._id]",[881,883],"[dispatch, history, userInfo]"]