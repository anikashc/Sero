[{"F:\\E-commerce\\client\\src\\index.js":"1","F:\\E-commerce\\client\\src\\store.js":"2","F:\\E-commerce\\client\\src\\App.js":"3","F:\\E-commerce\\client\\src\\reducers\\eateryReducers.js":"4","F:\\E-commerce\\client\\src\\reducers\\cartReducers.js":"5","F:\\E-commerce\\client\\src\\reducers\\userReducers.js":"6","F:\\E-commerce\\client\\src\\Screens\\Home.js":"7","F:\\E-commerce\\client\\src\\Components\\Header.js":"8","F:\\E-commerce\\client\\src\\Screens\\Register.js":"9","F:\\E-commerce\\client\\src\\Screens\\Login.js":"10","F:\\E-commerce\\client\\src\\Screens\\Checkout.js":"11","F:\\E-commerce\\client\\src\\Screens\\Cart.js":"12","F:\\E-commerce\\client\\src\\Components\\Footer.js":"13","F:\\E-commerce\\client\\src\\Screens\\AddItem.js":"14","F:\\E-commerce\\client\\src\\Screens\\Payment.js":"15","F:\\E-commerce\\client\\src\\Screens\\Feedback.js":"16","F:\\E-commerce\\client\\src\\Screens\\Menu.js":"17","F:\\E-commerce\\client\\src\\Screens\\UpdateDetails.js":"18","F:\\E-commerce\\client\\src\\constants\\userConstants.js":"19","F:\\E-commerce\\client\\src\\Components\\Loader.js":"20","F:\\E-commerce\\client\\src\\constants\\eateryConstants.js":"21","F:\\E-commerce\\client\\src\\Components\\Message.js":"22","F:\\E-commerce\\client\\src\\constants\\cartConstants.js":"23","F:\\E-commerce\\client\\src\\Components\\FormContainer.js":"24","F:\\E-commerce\\client\\src\\Components\\CheckoutSteps.js":"25","F:\\E-commerce\\client\\src\\Components\\Eatery.js":"26","F:\\E-commerce\\client\\src\\actions\\eateryActions.js":"27","F:\\E-commerce\\client\\src\\actions\\cartActions.js":"28","F:\\E-commerce\\client\\src\\actions\\userActions.js":"29","F:\\E-commerce\\client\\src\\Components\\Item.js":"30","F:\\E-commerce\\client\\src\\Components\\Review.js":"31","F:\\E-commerce\\client\\src\\Components\\Category.js":"32","F:\\E-commerce\\client\\src\\Screens\\DashboardMenu.js":"33","F:\\E-commerce\\client\\src\\item.js":"34","F:\\E-commerce\\client\\src\\Components\\DashboardItem.js":"35","F:\\E-commerce\\client\\src\\Screens\\UserList.js":"36","F:\\E-commerce\\client\\src\\Screens\\UserEdit.js":"37","F:\\E-commerce\\client\\src\\Screens\\EateryList.js":"38","F:\\E-commerce\\client\\src\\Screens\\Dashboard.js":"39"},{"size":316,"mtime":1611735890688,"results":"40","hashOfConfig":"41"},{"size":1942,"mtime":1613640514582,"results":"42","hashOfConfig":"41"},{"size":2248,"mtime":1613769057518,"results":"43","hashOfConfig":"41"},{"size":1426,"mtime":1613640640001,"results":"44","hashOfConfig":"41"},{"size":2222,"mtime":1612513575732,"results":"45","hashOfConfig":"41"},{"size":3785,"mtime":1613560290438,"results":"46","hashOfConfig":"41"},{"size":3650,"mtime":1613380062552,"results":"47","hashOfConfig":"41"},{"size":3727,"mtime":1613769214970,"results":"48","hashOfConfig":"41"},{"size":4304,"mtime":1612775988073,"results":"49","hashOfConfig":"41"},{"size":2413,"mtime":1612780625345,"results":"50","hashOfConfig":"41"},{"size":4035,"mtime":1613566417812,"results":"51","hashOfConfig":"41"},{"size":5382,"mtime":1612431306044,"results":"52","hashOfConfig":"41"},{"size":1795,"mtime":1613566278183,"results":"53","hashOfConfig":"41"},{"size":4921,"mtime":1613328696857,"results":"54","hashOfConfig":"41"},{"size":351,"mtime":1613566368864,"results":"55","hashOfConfig":"41"},{"size":1551,"mtime":1613649079400,"results":"56","hashOfConfig":"41"},{"size":5439,"mtime":1613551644616,"results":"57","hashOfConfig":"41"},{"size":4287,"mtime":1613769309274,"results":"58","hashOfConfig":"41"},{"size":1515,"mtime":1613551580999,"results":"59","hashOfConfig":"41"},{"size":479,"mtime":1612002324299,"results":"60","hashOfConfig":"41"},{"size":542,"mtime":1613639994393,"results":"61","hashOfConfig":"41"},{"size":304,"mtime":1613380062534,"results":"62","hashOfConfig":"41"},{"size":162,"mtime":1612343671448,"results":"63","hashOfConfig":"41"},{"size":346,"mtime":1612766841348,"results":"64","hashOfConfig":"41"},{"size":1278,"mtime":1612428910864,"results":"65","hashOfConfig":"41"},{"size":1272,"mtime":1613380062521,"results":"66","hashOfConfig":"41"},{"size":2239,"mtime":1613651275045,"results":"67","hashOfConfig":"41"},{"size":1386,"mtime":1613566304380,"results":"68","hashOfConfig":"41"},{"size":6466,"mtime":1613647897697,"results":"69","hashOfConfig":"41"},{"size":3673,"mtime":1612524869326,"results":"70","hashOfConfig":"41"},{"size":2027,"mtime":1613329611727,"results":"71","hashOfConfig":"41"},{"size":1725,"mtime":1613328696856,"results":"72","hashOfConfig":"41"},{"size":982,"mtime":1613769289919,"results":"73","hashOfConfig":"41"},{"size":2559,"mtime":1613380062555,"results":"74","hashOfConfig":"41"},{"size":638,"mtime":1613551381559,"results":"75","hashOfConfig":"41"},{"size":3372,"mtime":1613560354966,"results":"76","hashOfConfig":"41"},{"size":5723,"mtime":1613566259304,"results":"77","hashOfConfig":"41"},{"size":3845,"mtime":1613769788256,"results":"78","hashOfConfig":"41"},{"size":2411,"mtime":1613769030864,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1y75gs6",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"82"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"82"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"82"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"82"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"164","messages":"165","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"F:\\E-commerce\\client\\src\\index.js",[],["166","167"],"F:\\E-commerce\\client\\src\\store.js",[],"F:\\E-commerce\\client\\src\\App.js",["168"],"F:\\E-commerce\\client\\src\\reducers\\eateryReducers.js",[],"F:\\E-commerce\\client\\src\\reducers\\cartReducers.js",[],"F:\\E-commerce\\client\\src\\reducers\\userReducers.js",[],"F:\\E-commerce\\client\\src\\Screens\\Home.js",[],"F:\\E-commerce\\client\\src\\Components\\Header.js",[],"F:\\E-commerce\\client\\src\\Screens\\Register.js",[],"F:\\E-commerce\\client\\src\\Screens\\Login.js",[],"F:\\E-commerce\\client\\src\\Screens\\Checkout.js",["169"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Col,Button, Form} from 'react-bootstrap'\r\nimport {saveCustomerMeta} from '../actions/cartActions'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nconst Checkout = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const dispatch = useDispatch()\r\n    const {eateryDetails, customerMeta}=cart\r\n    const [name, setName] = useState(customerMeta.name);\r\n    const [email, setEmail] = useState(customerMeta.email);\r\n    const [phone, setPhone] = useState(customerMeta.phone);\r\n    const [paymentType, setPaymentType] = useState('Pay Now');\r\n    const submitHandler =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(saveCustomerMeta({name,email,phone,paymentType}))\r\n\r\n        console.log(paymentType)\r\n\r\n        if(paymentType=='payLater'){\r\n            history.push('/orderSummary')\r\n        }\r\n        else{\r\n            history.push('/payment')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1/>\r\n            <h2>Checkout</h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        required\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='Email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email (optional)'\r\n                        value={email}\r\n                        \r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group> \r\n                <Form.Group controlId='phone'>\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Phone'\r\n                        value={phone}\r\n                        required\r\n                        onChange={(e)=>setPhone(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group> \r\n                \r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                \r\n                    <Col>\r\n                    \r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Pay Now'\r\n                            id='Pay Now'\r\n                            name='paymentType'\r\n                            value='payNow'\r\n                            disabled={!eateryDetails.payNowEnable}\r\n                            required\r\n                            onChange={(e)=>setPaymentType(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Pay Later'\r\n                            id='Pay Later'\r\n                            name='paymentType'\r\n                            value='payLater'\r\n                            disabled={!eateryDetails.payLaterEnable}\r\n                            onChange={(e)=>setPaymentType(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                    \r\n                \r\n                \r\n                <Button type='submit' variant='primary'>Continue</Button>  \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","F:\\E-commerce\\client\\src\\Screens\\Cart.js",["170"],"import React, { useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Button, Card, Container} from 'react-bootstrap'\r\nimport Message from '../Components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst Cart = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const dispatch = useDispatch()\r\n    const {cartItems,eateryDetails}=cart\r\n    let browserHistory = useHistory();\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id,eateryDetails))\r\n    }\r\n    const addToCartHandler = (item,qty) =>{\r\n        \r\n        const item1={\r\n            _id: item.product,\r\n            name: item.name,\r\n            cost: item.cost,\r\n            category: item.category,\r\n            image: item.image,\r\n            isAvailable: item.isAvailable,\r\n        }\r\n        dispatch(addToCart(item1,eateryDetails,qty))\r\n    }\r\n    const checkoutHandler =() =>{\r\n        history.push('/checkout')\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Container fluid>\r\n                <Row><Button className='mt-3' onClick={()=>browserHistory.goBack()}>Go Back</Button></Row>\r\n                <Row><h3>Your Cart<small class=\"text-muted\"> from {eateryDetails.name}</small></h3></Row>\r\n                {(cartItems.length === 0 || !eateryDetails) ? (\r\n                    <Message>\r\n                        Your cart is empty  <Button><Link to='/'>Order!</Link></Button>\r\n                    </Message>\r\n                ):(\r\n                    <div>\r\n                    <Row md={1} lg={1} xl={1} noGutters={true}>   \r\n                        \r\n                        <ListGroup>\r\n                            \r\n                            {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                \r\n                                <Col md={4} xs={3} mx-auto align='center'>\r\n                                    {item.name}\r\n                                </Col>\r\n                                \r\n                                <Col md={4} xs={5} mx-auto align='center'>\r\n                                <Button size='sm' className='mx-2' onClick={()=> {\r\n                                        addToCartHandler(item,item.qty-1)\r\n                                        }} disabled={item.qty===0}>\r\n                                            <i class=\"fas fa-chevron-left\"></i>\r\n                                    </Button>\r\n                                    \r\n                                    {item.qty}\r\n                                \r\n                                    <Button size='sm' className='mx-2' onClick={()=> {\r\n                                        addToCartHandler(item,item.qty+1)\r\n                                        }}>\r\n                                            <i class=\"fas fa-chevron-right\"></i>\r\n                                    </Button>\r\n                                </Col >\r\n                                <Col xs={2} md={1}  align='center'>₹{item.cost*item.qty}</Col>\r\n                                <Col md={2} xs={1} align='center'>\r\n                                    <Button\r\n                                    size='sm' mx-0\r\n                                    onClick={() => removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                                \r\n                                \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </Row>\r\n\r\n                    <Row className='my-4'>\r\n\r\n                        <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item >\r\n                            <h4>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                                items\r\n                            </h4>\r\n                            ₹\r\n                            {cartItems\r\n                                .reduce((acc, item) => acc + item.qty * item.cost, 0)\r\n                                .toFixed(2)}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0 || !eateryDetails}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    Proceed To Checkout\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        </Card>\r\n                        \r\n                    </Row>\r\n                </div>\r\n                )}\r\n                \r\n            </Container>\r\n        </React.Fragment>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n","F:\\E-commerce\\client\\src\\Components\\Footer.js",[],"F:\\E-commerce\\client\\src\\Screens\\AddItem.js",["171","172","173","174"],"import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport FormContainer from '../Components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nfunction AddItem({ location, history }) {\r\n\r\n    const [name, setName] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const [phoneNumber, setPhoneNumber] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [confirmPassword, setConfirmPassword] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userRegister = useSelector((state) => state.userRegister)\r\n    const { loading, error, userInfo } = userRegister\r\n\r\n    const redirect = location.search ? location.search.split('=')[1] : '/'\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo) {\r\n\r\n            history.push(redirect)\r\n        }\r\n    }, [history, userInfo, redirect])\r\n\r\n    const submitHandler = (e) => {\r\n\r\n        e.preventDefault()\r\n\r\n        if (password !== confirmPassword) {\r\n\r\n            setMessage('Passwords do not match')\r\n        } else {\r\n\r\n            dispatch(register(name, email, phoneNumber, password))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <h2>Add Item</h2>\r\n\r\n            { message && <Message variant='danger'>{message}</Message>}\r\n            { error && <Message variant='danger'>{error}</Message>}\r\n            { loading && <Loader />}\r\n\r\n            <Form onSubmit={submitHandler}>\r\n\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter name'\r\n                        value={name}\r\n                        onChange={(e) => setName(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Image</Form.Label>\r\n                    <Form.Control\r\n                        type='file'\r\n                        placeholder='Enter email'\r\n                        value={email}\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='phoneNumber'>\r\n                    <Form.Label>Discription</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter phone number'\r\n                        value={phoneNumber}\r\n                        onChange={(e) => setPhoneNumber(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Brand</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter password'\r\n                        value={password}\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Price</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Category</Form.Label>\r\n                    <Form.Control\r\n                        type='password'\r\n                        placeholder='Enter confirm password'\r\n                        value={confirmPassword}\r\n                        onChange={(e) => setConfirmPassword(e.target.value)}\r\n                    ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Add</Button>\r\n            </Form>\r\n        </FormContainer>\r\n    );\r\n}\r\n\r\nexport default AddItem;","F:\\E-commerce\\client\\src\\Screens\\Payment.js",[],"F:\\E-commerce\\client\\src\\Screens\\Feedback.js",["175","176"],"import React, { useEffect, useState } from 'react';\r\nimport randomColor from 'randomcolor';\r\n// import { Row, Col, Container, InputGroup, FormControl } from 'react-bootstrap';\r\nimport Review from '../Components/Review';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport { getEateryReviews } from '../actions/eateryActions'\r\n\r\n\r\nconst Feedback = () =>{\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector((state) => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n\r\n\r\n    const reviewList = useSelector(state => state.eateryReviews);\r\n \r\n    const {error, loading, reviews} = reviewList;\r\n    \r\n    useEffect(() => {\r\n        dispatch(getEateryReviews(userInfo.eatery));\r\n    }, [dispatch]);\r\n\r\n    \r\n\r\n    return(\r\n        <div>\r\n            <h2>Feedback And Complaints</h2>\r\n            { loading? ( <Loader /> ) : error?  (<Message variant='danger'>{ error }</Message>) :\r\n            (\r\n                reviews.map((review) => {\r\n                    return(\r\n                        <Review \r\n                            name={review.name}\r\n                            email={review.email}\r\n                            comment={review.feedback}\r\n                            rating={review.rating}\r\n                            color={randomColor()}\r\n                        />\r\n                    )\r\n                })\r\n            )\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Feedback","F:\\E-commerce\\client\\src\\Screens\\Menu.js",[],"F:\\E-commerce\\client\\src\\Screens\\UpdateDetails.js",[],"F:\\E-commerce\\client\\src\\constants\\userConstants.js",[],"F:\\E-commerce\\client\\src\\Components\\Loader.js",[],"F:\\E-commerce\\client\\src\\constants\\eateryConstants.js",[],"F:\\E-commerce\\client\\src\\Components\\Message.js",[],"F:\\E-commerce\\client\\src\\constants\\cartConstants.js",[],"F:\\E-commerce\\client\\src\\Components\\FormContainer.js",[],"F:\\E-commerce\\client\\src\\Components\\CheckoutSteps.js",[],"F:\\E-commerce\\client\\src\\Components\\Eatery.js",[],"F:\\E-commerce\\client\\src\\actions\\eateryActions.js",[],"F:\\E-commerce\\client\\src\\actions\\cartActions.js",[],"F:\\E-commerce\\client\\src\\actions\\userActions.js",["177","178","179"],"import axios from 'axios'\r\nimport {\r\n\r\n    USER_DETAILS_FAIL,\r\n    USER_DETAILS_REQUEST,\r\n    USER_DETAILS_SUCCESS,\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_PROFILE_FAIL,\r\n    USER_UPDATE_PROFILE_REQUEST,\r\n    USER_UPDATE_PROFILE_SUCCESS,\r\n    USER_DETAILS_RESET,\r\n    USER_LIST_FAIL,\r\n    USER_LIST_SUCCESS,\r\n    USER_LIST_REQUEST,\r\n    USER_LIST_RESET,\r\n    USER_DELETE_REQUEST,\r\n    USER_DELETE_SUCCESS,\r\n    USER_DELETE_FAIL,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_SUCCESS,\r\n    USER_UPDATE_REQUEST,\r\n} from '../constants/userConstants'\r\n\r\nexport const login = (email, password) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_REQUEST\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            }\r\n        }\r\n\r\n        const { data } = await  axios.post(\r\n            '/api/users/login',\r\n            { email, password },\r\n            config \r\n        )\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch(error) {\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n\r\n    localStorage.removeItem('userInfo')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAILS_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n}\r\n\r\nexport const register = (name, email, phoneNumber, password) => async (dispatch) => {\r\n\r\n    try {\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_REQUEST,\r\n        })\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            '/api/users',\r\n            { name, email, phoneNumber, password },\r\n            config\r\n        )\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        dispatch({\r\n            type: USER_LOGIN_SUCCESS,\r\n            payload: data,\r\n        })\r\n\r\n        localStorage.setItem('userInfo', JSON.stringify(data))\r\n\r\n    } catch (error) {\r\n\r\n        dispatch({\r\n            type: USER_REGISTER_FAIL,\r\n            payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DETAILS_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users/${id}`, config)\r\n\r\n        dispatch({\r\n            type: USER_DETAILS_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_DETAILS_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_LIST_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(`/api/users`, config)\r\n\r\n        dispatch({\r\n            type: USER_LIST_SUCCESS,\r\n            payload: data,\r\n        })\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_LIST_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_DELETE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/users/${id}`, config)\r\n\r\n        dispatch({ type: USER_DELETE_SUCCESS })\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: USER_UPDATE_REQUEST,\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`,\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.put(`/api/users/${user._id}`, user, config)\r\n\r\n        dispatch({ type: USER_UPDATE_SUCCESS })\r\n\r\n        dispatch({ type: USER_DETAILS_SUCCESS, payload: data })\r\n\r\n        dispatch({ type: USER_DETAILS_RESET })\r\n    } catch (error) {\r\n        const message =\r\n        error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: USER_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","F:\\E-commerce\\client\\src\\Components\\Item.js",["180","181","182","183","184","185","186"],"import { disable } from 'colors';\r\nimport '../index.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux' \r\nimport { Card, Col, Row, ListGroup, Button, Image} from 'react-bootstrap'\r\nimport {addToCart} from '../actions/cartActions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 10,\r\n      width: '100%'\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: 'auto',\r\n      width: '90%',\r\n      height: 'auto',\r\n      backgroundColor: 'black',\r\n      color: 'white'\r\n      \r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 100,\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      maxWidth: '100%',\r\n      maxHeight: '100%',\r\n    },\r\n  }));\r\n\r\nconst Item = ({item,eateryDetailProp}) => {\r\n    \r\n    const cart = useSelector(state=>state.cart)\r\n    const {cartItems,eateryDetails}=cart\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles();\r\n    const handleClick = (quantity) =>{\r\n        \r\n        dispatch(addToCart(item,eateryDetailProp,quantity))\r\n    }\r\n    var existingQty=0\r\n    if(eateryDetails._id==eateryDetailProp._id){\r\n        const existItem  = cartItems.find(x=>x.product === item._id)\r\n        if(existItem){\r\n            existingQty=existItem.qty\r\n        }\r\n        console.log(existItem)\r\n\r\n    }\r\n    const [qty,setQty]=useState(existingQty)\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                <Grid item>\r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                    <Grid item xs>\r\n                        <Typography gutterBottom>\r\n                        {item.name} <div class=\"badge badge-danger ml-2\">{item.isAvailable? null: 'Unavailable'}</div> \r\n                        </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                        {item.description}\r\n                        </Typography>\r\n                        \r\n                    </Grid>\r\n                    \r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Typography align='right' >₹{item.cost}</Typography>\r\n                    <Typography >\r\n                        <Row><Button className='mx-3' size='sm' onClick={()=> {\r\n                        setQty(qty-1)\r\n                        handleClick(qty-1)\r\n                        }} disabled={!eateryDetailProp.isOpen || qty<=0 || !item.isAvailable }>\r\n                            <i class=\"fas fa-chevron-left\"></i>\r\n                        </Button>\r\n                        \r\n                        <Typography>{qty}</Typography>\r\n                    \r\n                        <Button className='mx-3' size='sm' onClick={()=> {\r\n                            setQty(qty+1)\r\n                            handleClick(qty+1)\r\n                            }} disabled={!eateryDetailProp.isOpen || !item.isAvailable}>\r\n                                <i class=\"fas fa-chevron-right\"></i>\r\n                        </Button></Row>\r\n                        \r\n                    </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Item;","F:\\E-commerce\\client\\src\\Components\\Review.js",[],"F:\\E-commerce\\client\\src\\Components\\Category.js",["187","188","189","190","191","192","193","194","195","196"],"import React, {useState, useEffect} from 'react';\r\nimport {useSelector} from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport Item from '../Components/Item';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nconst Category = ({name, menu}) => {\r\n    const  eateryDetails = useSelector(state => state.eateryDetails) // call whatever you call in the store\r\n    const {eatery} = eateryDetails\r\n    const [openCategory, setOpenCategory] = React.useState(true);\r\n\r\n    const handleClick = () => {\r\n        setOpenCategory(!openCategory);\r\n    };\r\n\r\n    return(\r\n        <div>\r\n            <ListItem button onClick={handleClick}>\r\n                            \r\n                <ListItemText primary= {name} />\r\n                    {openCategory ? <i class=\"fas fa-chevron-up\"></i> : <i class=\"fas fa-chevron-down\"></i>}\r\n            </ListItem>\r\n            <Collapse in={openCategory} timeout=\"auto\" unmountOnExit>\r\n                <List component=\"div\" disablePadding>\r\n                    {menu.map(item => (\r\n                        <Row key={item._id}>\r\n                            <Item item={item} eateryDetailProp={eatery}/>\r\n                        </Row>\r\n                    ))}\r\n                                                \r\n                </List>\r\n            </Collapse>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Category;","F:\\E-commerce\\client\\src\\Screens\\DashboardMenu.js",[],"F:\\E-commerce\\client\\src\\item.js",[],"F:\\E-commerce\\client\\src\\Components\\DashboardItem.js",[],"F:\\E-commerce\\client\\src\\Screens\\UserList.js",[],"F:\\E-commerce\\client\\src\\Screens\\UserEdit.js",[],"F:\\E-commerce\\client\\src\\Screens\\EateryList.js",[],"F:\\E-commerce\\client\\src\\Screens\\Dashboard.js",["197"],{"ruleId":"198","replacedBy":"199"},{"ruleId":"200","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":2,"column":8,"nodeType":"204","messageId":"205","endLine":2,"endColumn":16},{"ruleId":"206","severity":1,"message":"207","line":22,"column":23,"nodeType":"208","messageId":"209","endLine":22,"endColumn":25},{"ruleId":"202","severity":1,"message":"210","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":26},{"ruleId":"202","severity":1,"message":"211","line":2,"column":24,"nodeType":"204","messageId":"205","endLine":2,"endColumn":27},{"ruleId":"202","severity":1,"message":"212","line":2,"column":29,"nodeType":"204","messageId":"205","endLine":2,"endColumn":32},{"ruleId":"202","severity":1,"message":"213","line":3,"column":10,"nodeType":"204","messageId":"205","endLine":3,"endColumn":23},{"ruleId":"202","severity":1,"message":"214","line":4,"column":10,"nodeType":"204","messageId":"205","endLine":4,"endColumn":14},{"ruleId":"202","severity":1,"message":"215","line":1,"column":28,"nodeType":"204","messageId":"205","endLine":1,"endColumn":36},{"ruleId":"216","severity":1,"message":"217","line":24,"column":8,"nodeType":"218","endLine":24,"endColumn":18,"suggestions":"219"},{"ruleId":"202","severity":1,"message":"220","line":14,"column":5,"nodeType":"204","messageId":"205","endLine":14,"endColumn":29},{"ruleId":"202","severity":1,"message":"221","line":15,"column":5,"nodeType":"204","messageId":"205","endLine":15,"endColumn":32},{"ruleId":"202","severity":1,"message":"222","line":16,"column":5,"nodeType":"204","messageId":"205","endLine":16,"endColumn":32},{"ruleId":"202","severity":1,"message":"223","line":1,"column":10,"nodeType":"204","messageId":"205","endLine":1,"endColumn":17},{"ruleId":"202","severity":1,"message":"210","line":3,"column":26,"nodeType":"204","messageId":"205","endLine":3,"endColumn":35},{"ruleId":"202","severity":1,"message":"224","line":5,"column":10,"nodeType":"204","messageId":"205","endLine":5,"endColumn":14},{"ruleId":"202","severity":1,"message":"212","line":5,"column":16,"nodeType":"204","messageId":"205","endLine":5,"endColumn":19},{"ruleId":"202","severity":1,"message":"225","line":5,"column":26,"nodeType":"204","messageId":"205","endLine":5,"endColumn":35},{"ruleId":"202","severity":1,"message":"226","line":5,"column":45,"nodeType":"204","messageId":"205","endLine":5,"endColumn":50},{"ruleId":"206","severity":1,"message":"207","line":50,"column":25,"nodeType":"208","messageId":"209","endLine":50,"endColumn":27},{"ruleId":"202","severity":1,"message":"215","line":1,"column":16,"nodeType":"204","messageId":"205","endLine":1,"endColumn":24},{"ruleId":"202","severity":1,"message":"210","line":1,"column":26,"nodeType":"204","messageId":"205","endLine":1,"endColumn":35},{"ruleId":"202","severity":1,"message":"212","line":3,"column":15,"nodeType":"204","messageId":"205","endLine":3,"endColumn":18},{"ruleId":"202","severity":1,"message":"226","line":3,"column":20,"nodeType":"204","messageId":"205","endLine":3,"endColumn":25},{"ruleId":"202","severity":1,"message":"225","line":3,"column":27,"nodeType":"204","messageId":"205","endLine":3,"endColumn":36},{"ruleId":"202","severity":1,"message":"224","line":3,"column":38,"nodeType":"204","messageId":"205","endLine":3,"endColumn":42},{"ruleId":"202","severity":1,"message":"227","line":3,"column":44,"nodeType":"204","messageId":"205","endLine":3,"endColumn":50},{"ruleId":"202","severity":1,"message":"228","line":6,"column":10,"nodeType":"204","messageId":"205","endLine":6,"endColumn":20},{"ruleId":"202","severity":1,"message":"229","line":7,"column":8,"nodeType":"204","messageId":"205","endLine":7,"endColumn":21},{"ruleId":"202","severity":1,"message":"230","line":10,"column":8,"nodeType":"204","messageId":"205","endLine":10,"endColumn":20},{"ruleId":"202","severity":1,"message":"231","line":2,"column":10,"nodeType":"204","messageId":"205","endLine":2,"endColumn":21},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'LinkContainer' is defined but never used.","'Link' is defined but never used.","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'userInfo.eatery'. Either include it or remove the dependency array.","ArrayExpression",["234"],"'USER_UPDATE_PROFILE_FAIL' is defined but never used.","'USER_UPDATE_PROFILE_REQUEST' is defined but never used.","'USER_UPDATE_PROFILE_SUCCESS' is defined but never used.","'disable' is defined but never used.","'Card' is defined but never used.","'ListGroup' is defined but never used.","'Image' is defined but never used.","'Button' is defined but never used.","'makeStyles' is defined but never used.","'ListSubheader' is defined but never used.","'ListItemIcon' is defined but never used.","'useDispatch' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},"Update the dependencies array to be: [dispatch, userInfo.eatery]",{"range":"237","text":"238"},[811,821],"[dispatch, userInfo.eatery]"]