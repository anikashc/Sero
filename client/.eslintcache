[{"F:\\E-commerce\\client\\src\\index.js":"1","F:\\E-commerce\\client\\src\\store.js":"2","F:\\E-commerce\\client\\src\\App.js":"3","F:\\E-commerce\\client\\src\\Screens\\Checkout.js":"4","F:\\E-commerce\\client\\src\\reducers\\cartReducers.js":"5","F:\\E-commerce\\client\\src\\Screens\\Cart.js":"6","F:\\E-commerce\\client\\src\\Screens\\Menu.js":"7","F:\\E-commerce\\client\\src\\reducers\\eateryReducers.js":"8","F:\\E-commerce\\client\\src\\Screens\\Payment.js":"9","F:\\E-commerce\\client\\src\\reducers\\userReducers.js":"10","F:\\E-commerce\\client\\src\\Components\\Header.js":"11","F:\\E-commerce\\client\\src\\Screens\\Home.js":"12","F:\\E-commerce\\client\\src\\Components\\Footer.js":"13","F:\\E-commerce\\client\\src\\Screens\\Login.js":"14","F:\\E-commerce\\client\\src\\Screens\\Register.js":"15","F:\\E-commerce\\client\\src\\Components\\Loader.js":"16","F:\\E-commerce\\client\\src\\Components\\CheckoutSteps.js":"17","F:\\E-commerce\\client\\src\\Components\\Message.js":"18","F:\\E-commerce\\client\\src\\Components\\Eatery.js":"19","F:\\E-commerce\\client\\src\\Components\\FormContainer.js":"20","F:\\E-commerce\\client\\src\\Components\\Item.js":"21","F:\\E-commerce\\client\\src\\constants\\cartConstants.js":"22","F:\\E-commerce\\client\\src\\constants\\eateryConstants.js":"23","F:\\E-commerce\\client\\src\\actions\\cartActions.js":"24","F:\\E-commerce\\client\\src\\actions\\userActions.js":"25","F:\\E-commerce\\client\\src\\constants\\userConstants.js":"26","F:\\E-commerce\\client\\src\\actions\\eateryActions.js":"27"},{"size":316,"mtime":1611735890688,"results":"28","hashOfConfig":"29"},{"size":1508,"mtime":1612774457272,"results":"30","hashOfConfig":"29"},{"size":1252,"mtime":1612766841345,"results":"31","hashOfConfig":"29"},{"size":4122,"mtime":1612776868582,"results":"32","hashOfConfig":"29"},{"size":2222,"mtime":1612513575732,"results":"33","hashOfConfig":"29"},{"size":5382,"mtime":1612431306044,"results":"34","hashOfConfig":"29"},{"size":6205,"mtime":1613033296777,"results":"35","hashOfConfig":"29"},{"size":976,"mtime":1611739748084,"results":"36","hashOfConfig":"29"},{"size":735,"mtime":1612462547906,"results":"37","hashOfConfig":"29"},{"size":999,"mtime":1612766841380,"results":"38","hashOfConfig":"29"},{"size":2207,"mtime":1612782163780,"results":"39","hashOfConfig":"29"},{"size":3558,"mtime":1612334162577,"results":"40","hashOfConfig":"29"},{"size":1809,"mtime":1612766841347,"results":"41","hashOfConfig":"29"},{"size":2413,"mtime":1612780625345,"results":"42","hashOfConfig":"29"},{"size":4304,"mtime":1612775988073,"results":"43","hashOfConfig":"29"},{"size":479,"mtime":1612002324299,"results":"44","hashOfConfig":"29"},{"size":1278,"mtime":1612428910864,"results":"45","hashOfConfig":"29"},{"size":306,"mtime":1611738770317,"results":"46","hashOfConfig":"29"},{"size":1372,"mtime":1612367289256,"results":"47","hashOfConfig":"29"},{"size":346,"mtime":1612766841348,"results":"48","hashOfConfig":"29"},{"size":3673,"mtime":1612524869326,"results":"49","hashOfConfig":"29"},{"size":162,"mtime":1612343671448,"results":"50","hashOfConfig":"29"},{"size":354,"mtime":1611739434602,"results":"51","hashOfConfig":"29"},{"size":1411,"mtime":1612354029203,"results":"52","hashOfConfig":"29"},{"size":2145,"mtime":1612766841379,"results":"53","hashOfConfig":"29"},{"size":391,"mtime":1612766841379,"results":"54","hashOfConfig":"29"},{"size":1253,"mtime":1611740173002,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"1y75gs6",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"58"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"58"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"58"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"F:\\E-commerce\\client\\src\\index.js",[],["119","120"],"F:\\E-commerce\\client\\src\\store.js",[],"F:\\E-commerce\\client\\src\\App.js",["121"],"import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Container } from 'react-bootstrap';\r\nimport Header from './Components/Header';\r\nimport Footer from './Components/Footer';\r\nimport Home from './Screens/Home';\r\nimport Menu from './Screens/Menu';\r\nimport Cart from './Screens/Cart';\r\nimport Login from './Screens/Login';\r\nimport Register from './Screens/Register'\r\nimport Checkout from './Screens/Checkout';\r\nimport Payment from './Screens/Payment';\r\nfunction App() {\r\n\r\n    return (\r\n      <Router>\r\n\r\n        <Header />\r\n        <main>\r\n          <Route path='/' component={Home} exact />\r\n          <Container>\r\n            \r\n            <Route path = '/login' component={Login} />\r\n            <Route path = '/register' component={Register} />\r\n            <Route path = '/menu/:id' component={Menu} exact />\r\n            <Route path = '/cart' component={Cart} />\r\n            <Route path = '/checkout' component={Checkout} />\r\n            <Route path = '/payment' component={Payment} />\r\n\r\n          </Container>\r\n        </main>\r\n\r\n        <Footer />\r\n\r\n      </Router>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","F:\\E-commerce\\client\\src\\Screens\\Checkout.js",["122","123","124","125","126","127","128"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Button, Card, Container, Form} from 'react-bootstrap'\r\nimport {saveCustomerMeta} from '../actions/cartActions'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nconst Checkout = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const dispatch = useDispatch()\r\n    const {eateryDetails, customerMeta}=cart\r\n    const [name, setName] = useState(customerMeta.name);\r\n    const [email, setEmail] = useState(customerMeta.email);\r\n    const [phone, setPhone] = useState(customerMeta.phone);\r\n    const [paymentType, setPaymentType] = useState('Pay Now');\r\n    const submitHandler =(e)=>{\r\n        e.preventDefault()\r\n        dispatch(saveCustomerMeta({name,email,phone,paymentType}))\r\n\r\n        console.log(paymentType)\r\n\r\n        if(paymentType=='payLater'){\r\n            history.push('/orderSummary')\r\n        }\r\n        else{\r\n            history.push('/payment')\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1/>\r\n            <h2>Checkout</h2>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Name'\r\n                        value={name}\r\n                        required\r\n                        onChange={(e)=>setName(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group>\r\n                <Form.Group controlId='Email'>\r\n                    <Form.Label>Email</Form.Label>\r\n                    <Form.Control\r\n                        type='email'\r\n                        placeholder='Enter Email (optional)'\r\n                        value={email}\r\n                        \r\n                        onChange={(e)=>setEmail(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group> \r\n                <Form.Group controlId='phone'>\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control\r\n                        type='text'\r\n                        placeholder='Enter Phone'\r\n                        value={phone}\r\n                        required\r\n                        onChange={(e)=>setPhone(e.target.value)}\r\n                    >\r\n\r\n                    </Form.Control>\r\n                </Form.Group> \r\n                \r\n                <Form.Group>\r\n                    <Form.Label as='legend'>Select Method</Form.Label>\r\n                \r\n                    <Col>\r\n                    \r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Pay Now'\r\n                            id='Pay Now'\r\n                            name='paymentType'\r\n                            value='payNow'\r\n                            disabled={!eateryDetails.payNowEnable}\r\n                            required\r\n                            onChange={(e)=>setPaymentType(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                        <Form.Check\r\n                            type='radio'\r\n                            label='Pay Later'\r\n                            id='Pay Later'\r\n                            name='paymentType'\r\n                            value='payLater'\r\n                            disabled={!eateryDetails.payLaterEnable}\r\n                            onChange={(e)=>setPaymentType(e.target.value)}\r\n                        >\r\n                        </Form.Check>\r\n                    </Col>\r\n                </Form.Group>\r\n                    \r\n                \r\n                \r\n                <Button type='submit' variant='primary'>Continue</Button>  \r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default Checkout\r\n","F:\\E-commerce\\client\\src\\reducers\\cartReducers.js",[],"F:\\E-commerce\\client\\src\\Screens\\Cart.js",["129"],"import React, { useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Button, Card, Container} from 'react-bootstrap'\r\nimport Message from '../Components/Message'\r\nimport { addToCart, removeFromCart } from '../actions/cartActions'\r\n\r\nconst Cart = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const dispatch = useDispatch()\r\n    const {cartItems,eateryDetails}=cart\r\n    let browserHistory = useHistory();\r\n    const removeFromCartHandler = (id) =>{\r\n        dispatch(removeFromCart(id,eateryDetails))\r\n    }\r\n    const addToCartHandler = (item,qty) =>{\r\n        \r\n        const item1={\r\n            _id: item.product,\r\n            name: item.name,\r\n            cost: item.cost,\r\n            category: item.category,\r\n            image: item.image,\r\n            isAvailable: item.isAvailable,\r\n        }\r\n        dispatch(addToCart(item1,eateryDetails,qty))\r\n    }\r\n    const checkoutHandler =() =>{\r\n        history.push('/checkout')\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Container fluid>\r\n                <Row><Button className='mt-3' onClick={()=>browserHistory.goBack()}>Go Back</Button></Row>\r\n                <Row><h3>Your Cart<small class=\"text-muted\"> from {eateryDetails.name}</small></h3></Row>\r\n                {(cartItems.length === 0 || !eateryDetails) ? (\r\n                    <Message>\r\n                        Your cart is empty  <Button><Link to='/'>Order!</Link></Button>\r\n                    </Message>\r\n                ):(\r\n                    <div>\r\n                    <Row md={1} lg={1} xl={1} noGutters={true}>   \r\n                        \r\n                        <ListGroup>\r\n                            \r\n                            {cartItems.map((item) => (\r\n                            <ListGroup.Item key={item.product}>\r\n                                <Row>\r\n                                \r\n                                <Col md={4} xs={3} mx-auto align='center'>\r\n                                    {item.name}\r\n                                </Col>\r\n                                \r\n                                <Col md={4} xs={5} mx-auto align='center'>\r\n                                <Button size='sm' className='mx-2' onClick={()=> {\r\n                                        addToCartHandler(item,item.qty-1)\r\n                                        }} disabled={item.qty===0}>\r\n                                            <i class=\"fas fa-chevron-left\"></i>\r\n                                    </Button>\r\n                                    \r\n                                    {item.qty}\r\n                                \r\n                                    <Button size='sm' className='mx-2' onClick={()=> {\r\n                                        addToCartHandler(item,item.qty+1)\r\n                                        }}>\r\n                                            <i class=\"fas fa-chevron-right\"></i>\r\n                                    </Button>\r\n                                </Col >\r\n                                <Col xs={2} md={1}  align='center'>₹{item.cost*item.qty}</Col>\r\n                                <Col md={2} xs={1} align='center'>\r\n                                    <Button\r\n                                    size='sm' mx-0\r\n                                    onClick={() => removeFromCartHandler(item.product)}\r\n                                    >\r\n                                        <i className='fas fa-trash'></i>\r\n                                    </Button>\r\n                                </Col>\r\n                                \r\n                                \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            ))}\r\n                        </ListGroup>\r\n                    </Row>\r\n\r\n                    <Row className='my-4'>\r\n\r\n                        <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item >\r\n                            <h4>\r\n                                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                                items\r\n                            </h4>\r\n                            ₹\r\n                            {cartItems\r\n                                .reduce((acc, item) => acc + item.qty * item.cost, 0)\r\n                                .toFixed(2)}\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={cartItems.length === 0 || !eateryDetails}\r\n                                    onClick={checkoutHandler}\r\n                                >\r\n                                    Proceed To Checkout\r\n                                </Button>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        </Card>\r\n                        \r\n                    </Row>\r\n                </div>\r\n                )}\r\n                \r\n            </Container>\r\n        </React.Fragment>\r\n        \r\n        \r\n    )\r\n}\r\n\r\nexport default Cart\r\n","F:\\E-commerce\\client\\src\\Screens\\Menu.js",["130","131","132","133"],"import React, {useState, useEffect} from 'react';\r\nimport {Link} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\nimport { Row, Col, Image, ListGroup, Card, Button } from 'react-bootstrap'\r\nimport Item from '../Components/Item';\r\n//import item from '../item';\r\nimport { listEateryDetails} from '../actions/eateryActions'\r\nimport Loader from '../Components/Loader';\r\nimport Message from '../Components/Message';\r\nimport StarRatings from 'react-star-ratings';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ListSubheader from '@material-ui/core/ListSubheader';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\n//import axios from 'axios'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: 1080,\r\n      backgroundColor: 'black',\r\n     \r\n    },\r\n    nested: {\r\n      paddingLeft: theme.spacing(4),\r\n    },\r\n  }));\r\n\r\nconst Menu = ({match}) => {\r\n    // match.params.id or match.params. anything that is in the url\r\n    //const eatery = eateries.find(p=>p._id===match.params.id)\r\n    //const [eatery,setEatery] = useState({})\r\n    const dispatch = useDispatch()\r\n    const  eateryDetails = useSelector(state => state.eateryDetails) // call whatever you call in the store\r\n    const {loading, error, eatery} = eateryDetails\r\n    useEffect(()=>{\r\n          dispatch(listEateryDetails(match.params.id))\r\n    },[dispatch, match])\r\n\r\n    const classes = useStyles();\r\n    const [openStarters, setOpenStarters] = React.useState(true);\r\n    const [openChinese, setOpenChinese] = React.useState(true);\r\n\r\n    const handleClickStarters = () => {\r\n        setOpenStarters(!openStarters);\r\n    };\r\n    \r\n    const handleClickChinese = () => {\r\n        setOpenChinese(!openChinese);\r\n    };\r\n    return (\r\n        <div>\r\n            <Link className=\"btn btn-secondary my-3\" to=\"/\">Go Back</Link>\r\n            {loading? (\r\n                <Loader /> \r\n                )\r\n            :   error ?(\r\n                <Message variant='danger'>{error}</Message>\r\n                ) \r\n            :   (\r\n                <>\r\n                    <Row>\r\n                        <Col md={6}>\r\n                            <Image src={eatery.image} alt={eatery.name } fluid />\r\n                        </Col>\r\n                        <Col md={6}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                <h3>{eatery.name}</h3>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                Description: {eatery.description}\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                <StarRatings\r\n                                    rating={eatery.rating}\r\n                                    starRatedColor=\"#FFDF00\"\r\n                                    starEmptyColor=\"#585858\"\r\n                                    starDimension=\"2rem\"\r\n                                    starSpacing=\"5px\"\r\n                                />\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                {eatery.isOpen? null : (<Message variant='danger'>Restaurant is closed, try after sometime</Message>)}\r\n                                </ListGroup.Item>\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                    <h2 className='menu-title py-3'>Menu</h2>\r\n                    </Row>\r\n                    \r\n                    <List\r\n                    component=\"nav\"\r\n                    aria-labelledby=\"nested-list-subheader\"\r\n                    subheader={\r\n                        <ListSubheader component=\"div\" id=\"nested-list-subheader\" style={{color: 'white'}}>\r\n                        Category\r\n                        </ListSubheader>\r\n                    }\r\n                    className={classes.root}\r\n                    >\r\n                        \r\n                        \r\n                        <ListItem button onClick={handleClickStarters}>\r\n                            \r\n                            <ListItemText primary=\"Starters\" />\r\n                            {openStarters ? <i class=\"fas fa-chevron-up\"></i> : <i class=\"fas fa-chevron-down\"></i>}\r\n                        </ListItem>\r\n                        <Collapse in={openStarters} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n                                {eatery.menu.map(item => (\r\n                                    <Row key={item._id}>\r\n                                        <Item item={item} eateryDetailProp={eatery}/>\r\n                                    </Row>\r\n                                ))}\r\n                                \r\n                            </List>\r\n                        </Collapse>\r\n                        <ListItem button onClick={handleClickChinese}>\r\n                            \r\n                            <ListItemText primary=\"Chinese\" />\r\n                            {openChinese ? <i class=\"fas fa-chevron-up\"></i> : <i class=\"fas fa-chevron-down\"></i>}\r\n                        </ListItem>\r\n                        <Collapse in={openChinese} timeout=\"auto\" unmountOnExit>\r\n                            <List component=\"div\" disablePadding>\r\n                            <ListItem button className={classes.nested}>\r\n                                \r\n                                <ListItemText primary=\"Starred\" />\r\n                            </ListItem>\r\n                            </List>\r\n                        </Collapse>\r\n                    </List>\r\n\r\n                </>\r\n\r\n\r\n\r\n                \r\n            \r\n                )\r\n            \r\n            }\r\n            \r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Menu;\r\n\r\n","F:\\E-commerce\\client\\src\\reducers\\eateryReducers.js",[],"F:\\E-commerce\\client\\src\\Screens\\Payment.js",["134","135","136","137","138","139","140","141","142","143","144","145","146","147","148"],"import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Button, Card, Container, Form} from 'react-bootstrap'\r\nimport {saveCustomerMeta} from '../actions/cartActions'\r\nimport FormContainer from '../Components/FormContainer'\r\nimport CheckoutSteps from '../Components/CheckoutSteps'\r\n\r\nconst Payment = ({history}) => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const dispatch = useDispatch()\r\n    const {eateryDetails, customerMeta}=cart\r\n    \r\n    \r\n    if(!customerMeta){\r\n        history.push('/checkout');\r\n    }\r\n    \r\n    return (\r\n        <h1>payment</h1>\r\n    )\r\n}\r\n\r\nexport default Payment\r\n ","F:\\E-commerce\\client\\src\\reducers\\userReducers.js",[],"F:\\E-commerce\\client\\src\\Components\\Header.js",[],"F:\\E-commerce\\client\\src\\Screens\\Home.js",[],"F:\\E-commerce\\client\\src\\Components\\Footer.js",["149","150"],"import React from 'react'\r\nimport { Container, Row, Col, Navbar, Nav, Button } from 'react-bootstrap'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport {useSelector} from 'react-redux' \r\nimport { LinkContainer} from 'react-router-bootstrap'\r\nimport Fab from '@material-ui/core/Fab'\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    fab: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nconst Footer = () => {\r\n    const cart = useSelector(state=>state.cart)\r\n    const {cartItems, eateryDetails}=cart\r\n    const classes = useStyles();\r\n    return (\r\n        <footer>\r\n            <Container>\r\n                \r\n                <Row>\r\n                    \r\n                    {(cartItems.length && eateryDetails)?\r\n                        (\r\n                            <Navbar className='navbarFixedBottom'  fixed=\"bottom\" variant='light'>\r\n                                <LinkContainer to='/cart'>\r\n                                    <Fab variant='extended' size='large' color='default' className={classes.fab}>\r\n                                        <h6 className=\"linkText\"> <i class=\"fas fa-shopping-cart fa-2x\"></i> ({cartItems.reduce((acc, item) => acc + item.qty, 0)})</h6>  \r\n                                    </Fab>\r\n                                </LinkContainer>\r\n                            </Navbar>\r\n                         \r\n                        )\r\n                    :\r\n                        null\r\n                    }\r\n                </Row>\r\n                <Row>\r\n                    <Col className='text-center py-3'>\r\n                    CopyRight &copy; Sero\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default Footer\r\n","F:\\E-commerce\\client\\src\\Screens\\Login.js",[],"F:\\E-commerce\\client\\src\\Screens\\Register.js",[],"F:\\E-commerce\\client\\src\\Components\\Loader.js",[],"F:\\E-commerce\\client\\src\\Components\\CheckoutSteps.js",[],"F:\\E-commerce\\client\\src\\Components\\Message.js",[],"F:\\E-commerce\\client\\src\\Components\\Eatery.js",[],"F:\\E-commerce\\client\\src\\Components\\FormContainer.js",[],"F:\\E-commerce\\client\\src\\Components\\Item.js",["151","152","153","154","155","156","157"],"import { disable } from 'colors';\r\nimport '../index.css';\r\nimport React, {useState, useEffect} from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux' \r\nimport { Card, Col, Row, ListGroup, Button, Image} from 'react-bootstrap'\r\nimport {addToCart} from '../actions/cartActions'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 10,\r\n      width: '100%'\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      margin: 'auto',\r\n      width: '90%',\r\n      height: 'auto',\r\n      backgroundColor: 'black',\r\n      color: 'white'\r\n      \r\n    },\r\n    image: {\r\n      width: 128,\r\n      height: 100,\r\n    },\r\n    img: {\r\n      margin: 'auto',\r\n      display: 'block',\r\n      maxWidth: '100%',\r\n      maxHeight: '100%',\r\n    },\r\n  }));\r\n\r\nconst Item = ({item,eateryDetailProp}) => {\r\n    \r\n    const cart = useSelector(state=>state.cart)\r\n    const {cartItems,eateryDetails}=cart\r\n    const dispatch = useDispatch()\r\n    const classes = useStyles();\r\n    const handleClick = (quantity) =>{\r\n        \r\n        dispatch(addToCart(item,eateryDetailProp,quantity))\r\n    }\r\n    var existingQty=0\r\n    if(eateryDetails._id==eateryDetailProp._id){\r\n        const existItem  = cartItems.find(x=>x.product === item._id)\r\n        if(existItem){\r\n            existingQty=existItem.qty\r\n        }\r\n        console.log(existItem)\r\n\r\n    }\r\n    const [qty,setQty]=useState(existingQty)\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper className={classes.paper}>\r\n                <Grid container spacing={2}>\r\n                <Grid item>\r\n                    \r\n                </Grid>\r\n                <Grid item xs={12} sm container>\r\n                    <Grid item xs container direction=\"column\" spacing={2}>\r\n                    <Grid item xs>\r\n                        <Typography gutterBottom>\r\n                        {item.name} <div class=\"badge badge-danger ml-2\">{item.isAvailable? null: 'Unavailable'}</div> \r\n                        </Typography>\r\n                        <Typography variant=\"body2\" gutterBottom>\r\n                        {item.description}\r\n                        </Typography>\r\n                        \r\n                    </Grid>\r\n                    \r\n                    </Grid>\r\n                    <Grid item>\r\n                    <Typography align='right' >₹{item.cost}</Typography>\r\n                    <Typography >\r\n                        <Row><Button className='mx-3' size='sm' onClick={()=> {\r\n                        setQty(qty-1)\r\n                        handleClick(qty-1)\r\n                        }} disabled={!eateryDetailProp.isOpen || qty<=0 || !item.isAvailable }>\r\n                            <i class=\"fas fa-chevron-left\"></i>\r\n                        </Button>\r\n                        \r\n                        <Typography>{qty}</Typography>\r\n                    \r\n                        <Button className='mx-3' size='sm' onClick={()=> {\r\n                            setQty(qty+1)\r\n                            handleClick(qty+1)\r\n                            }} disabled={!eateryDetailProp.isOpen || !item.isAvailable}>\r\n                                <i class=\"fas fa-chevron-right\"></i>\r\n                        </Button></Row>\r\n                        \r\n                    </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n        \r\n        \r\n    );\r\n}\r\n\r\nexport default Item;","F:\\E-commerce\\client\\src\\constants\\cartConstants.js",[],"F:\\E-commerce\\client\\src\\constants\\eateryConstants.js",[],"F:\\E-commerce\\client\\src\\actions\\cartActions.js",["158"],"import axios from 'axios'\r\nimport {CART_ADD_ITEM, CART_REMOVE_ITEM, CART_SAVE_CUSTOMER_META} from '../constants/cartConstants'\r\n\r\nexport const addToCart = (product,eateryDetails,qty) => async (dispatch, getState)=>{\r\n    const item= product\r\n\r\n\r\n    dispatch({\r\n        type: CART_ADD_ITEM,\r\n        payload: {\r\n            product: item._id,\r\n            name: item.name,\r\n            cost: item.cost,\r\n            category: item.category,\r\n            image: item.image,\r\n            isAvailable: item.isAvailable,\r\n            qty,\r\n            eateryDetails\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n    localStorage.setItem('eateryDetails', JSON.stringify(getState().cart.eateryDetails))\r\n}\r\n\r\nexport const removeFromCart = (productId,eateryDetails) => (dispatch, getState)=>{\r\n\r\n    dispatch({\r\n        type: CART_REMOVE_ITEM,\r\n        payload:{\r\n            product: productId,\r\n            eateryDetails\r\n        }\r\n    })\r\n    localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems))\r\n    localStorage.setItem('eateryDetails', JSON.stringify(getState().cart.eateryDetails))\r\n}\r\n\r\nexport const saveCustomerMeta = (data) => (dispatch)=>{\r\n\r\n    dispatch({\r\n        type: CART_SAVE_CUSTOMER_META,\r\n        payload:{\r\n            data\r\n        }\r\n    })\r\n    localStorage.setItem('customerMeta', JSON.stringify(data))\r\n    \r\n}","F:\\E-commerce\\client\\src\\actions\\userActions.js",[],"F:\\E-commerce\\client\\src\\constants\\userConstants.js",[],"F:\\E-commerce\\client\\src\\actions\\eateryActions.js",[],{"ruleId":"159","replacedBy":"160"},{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","severity":1,"message":"164","line":2,"column":8,"nodeType":"165","messageId":"166","endLine":2,"endColumn":16},{"ruleId":"163","severity":1,"message":"167","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"168","line":2,"column":16,"nodeType":"165","messageId":"166","endLine":2,"endColumn":26},{"ruleId":"163","severity":1,"message":"169","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":13},{"ruleId":"163","severity":1,"message":"170","line":4,"column":20,"nodeType":"165","messageId":"166","endLine":4,"endColumn":29},{"ruleId":"163","severity":1,"message":"171","line":4,"column":39,"nodeType":"165","messageId":"166","endLine":4,"endColumn":43},{"ruleId":"163","severity":1,"message":"172","line":4,"column":45,"nodeType":"165","messageId":"166","endLine":4,"endColumn":54},{"ruleId":"173","severity":1,"message":"174","line":23,"column":23,"nodeType":"175","messageId":"176","endLine":23,"endColumn":25},{"ruleId":"163","severity":1,"message":"177","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":26},{"ruleId":"163","severity":1,"message":"178","line":1,"column":16,"nodeType":"165","messageId":"166","endLine":1,"endColumn":24},{"ruleId":"163","severity":1,"message":"171","line":4,"column":38,"nodeType":"165","messageId":"166","endLine":4,"endColumn":42},{"ruleId":"163","severity":1,"message":"179","line":4,"column":44,"nodeType":"165","messageId":"166","endLine":4,"endColumn":50},{"ruleId":"163","severity":1,"message":"180","line":16,"column":8,"nodeType":"165","messageId":"166","endLine":16,"endColumn":20},{"ruleId":"163","severity":1,"message":"178","line":1,"column":17,"nodeType":"165","messageId":"166","endLine":1,"endColumn":25},{"ruleId":"163","severity":1,"message":"167","line":2,"column":10,"nodeType":"165","messageId":"166","endLine":2,"endColumn":14},{"ruleId":"163","severity":1,"message":"168","line":2,"column":16,"nodeType":"165","messageId":"166","endLine":2,"endColumn":26},{"ruleId":"163","severity":1,"message":"169","line":4,"column":10,"nodeType":"165","messageId":"166","endLine":4,"endColumn":13},{"ruleId":"163","severity":1,"message":"181","line":4,"column":15,"nodeType":"165","messageId":"166","endLine":4,"endColumn":18},{"ruleId":"163","severity":1,"message":"170","line":4,"column":20,"nodeType":"165","messageId":"166","endLine":4,"endColumn":29},{"ruleId":"163","severity":1,"message":"179","line":4,"column":31,"nodeType":"165","messageId":"166","endLine":4,"endColumn":37},{"ruleId":"163","severity":1,"message":"171","line":4,"column":39,"nodeType":"165","messageId":"166","endLine":4,"endColumn":43},{"ruleId":"163","severity":1,"message":"172","line":4,"column":45,"nodeType":"165","messageId":"166","endLine":4,"endColumn":54},{"ruleId":"163","severity":1,"message":"182","line":4,"column":56,"nodeType":"165","messageId":"166","endLine":4,"endColumn":60},{"ruleId":"163","severity":1,"message":"183","line":5,"column":9,"nodeType":"165","messageId":"166","endLine":5,"endColumn":25},{"ruleId":"163","severity":1,"message":"184","line":6,"column":8,"nodeType":"165","messageId":"166","endLine":6,"endColumn":21},{"ruleId":"163","severity":1,"message":"185","line":7,"column":8,"nodeType":"165","messageId":"166","endLine":7,"endColumn":21},{"ruleId":"163","severity":1,"message":"186","line":11,"column":11,"nodeType":"165","messageId":"166","endLine":11,"endColumn":19},{"ruleId":"163","severity":1,"message":"187","line":12,"column":12,"nodeType":"165","messageId":"166","endLine":12,"endColumn":25},{"ruleId":"163","severity":1,"message":"188","line":2,"column":39,"nodeType":"165","messageId":"166","endLine":2,"endColumn":42},{"ruleId":"163","severity":1,"message":"179","line":2,"column":44,"nodeType":"165","messageId":"166","endLine":2,"endColumn":50},{"ruleId":"163","severity":1,"message":"189","line":1,"column":10,"nodeType":"165","messageId":"166","endLine":1,"endColumn":17},{"ruleId":"163","severity":1,"message":"177","line":3,"column":26,"nodeType":"165","messageId":"166","endLine":3,"endColumn":35},{"ruleId":"163","severity":1,"message":"171","line":5,"column":10,"nodeType":"165","messageId":"166","endLine":5,"endColumn":14},{"ruleId":"163","severity":1,"message":"181","line":5,"column":16,"nodeType":"165","messageId":"166","endLine":5,"endColumn":19},{"ruleId":"163","severity":1,"message":"170","line":5,"column":26,"nodeType":"165","messageId":"166","endLine":5,"endColumn":35},{"ruleId":"163","severity":1,"message":"190","line":5,"column":45,"nodeType":"165","messageId":"166","endLine":5,"endColumn":50},{"ruleId":"173","severity":1,"message":"174","line":50,"column":25,"nodeType":"175","messageId":"176","endLine":50,"endColumn":27},{"ruleId":"163","severity":1,"message":"191","line":1,"column":8,"nodeType":"165","messageId":"166","endLine":1,"endColumn":13},"no-native-reassign",["192"],"no-negated-in-lhs",["193"],"no-unused-vars","'ReactDOM' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'useHistory' is defined but never used.","'Row' is defined but never used.","'ListGroup' is defined but never used.","'Card' is defined but never used.","'Container' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useEffect' is defined but never used.","'useState' is defined but never used.","'Button' is defined but never used.","'ListItemIcon' is defined but never used.","'Col' is defined but never used.","'Form' is defined but never used.","'saveCustomerMeta' is defined but never used.","'FormContainer' is defined but never used.","'CheckoutSteps' is defined but never used.","'dispatch' is assigned a value but never used.","'eateryDetails' is assigned a value but never used.","'Nav' is defined but never used.","'disable' is defined but never used.","'Image' is defined but never used.","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]